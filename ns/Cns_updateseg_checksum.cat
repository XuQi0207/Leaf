CNS_UPDATESEG_CHECKSUM(C3n)s Library FunctioCnNsS_UPDATESEG_CHECKSUM(3)



NNAAMMEE
       Cns_updateseg_checksum  -  Updates  the checksum of a file
       segment

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee ""CCnnss__aappii..hh""

       iinntt  CCnnss__uuppddaatteesseegg__cchheecckkssuumm  ((cchhaarr   **_s_e_r_v_e_r,,   uu__ssiiggnneedd6644
       _f_i_l_e_i_d,,    ssttrruucctt    CCnnss__sseeggaattttrrss   **_o_l_d_s_e_g_a_t_t_r_s,,   ssttrruucctt
       CCnnss__sseeggaattttrrss **_n_e_w_s_e_g_a_t_t_r_s))

DDEESSCCRRIIPPTTIIOONN
       CCnnss__uuppddaatteesseegg__cchheecckkssuumm Updates the checksum of a file seg­
       ment.   This  function  should  be called by the stager to
       update the checksum of file segment for  files  which  did
       not  previously have a checksum computed The file is iden­
       tified by _s_e_r_v_e_r and _f_i_l_e_i_d.

       _o_l_d_s_e_g_a_t_t_r_s
              is a pointer to a Cns_segattrs structure containing
              the old segment attributes.

       _n_e_w_s_e_g_a_t_t_r_s
              is a pointer to a Cns_segattrs structure containing
              the new segment attributes.

       struct Cns_segattrs {
               int             copyno;         /* copy number */
               int             fsec;           /* file segment number */
               u_signed64      segsize;        /* file segment size */
               int             compression;    /* compression factor */
               char            s_status;       /* 'd' --> deleted */
               char            vid[CA_MAXVIDLEN+1];
               int             side;
               int             fseq;           /* file sequence number */
               unsigned char   blockid[4];     /* for positionning with locate */
               char            checksum_name[CA_MAXCKSUMNAMELEN+1];
               unsigned long   checksum;
       };

RREETTUURRNN VVAALLUUEE
       This routine returns 0 if the operation was successful  or
       -1  if the operation failed. In the latter case, sseerrrrnnoo is
       set appropriately.

EERRRROORRSS
       EENNOOEENNTT       The referenced file does not exist anymore.

       EEFFAAUULLTT       _o_l_d_s_e_g_a_t_t_r_s or _n_e_w_s_e_g_a_t_t_r_s are NULL pointers.

       EEIISSDDIIRR       The file is not a regular file.

       EEIINNVVAALL       copyno/fsec  pair in _n_e_w_s_e_g_a_t_t_r_s is not iden­
                    tical to the copyno/fsec pair in  _o_l_d_s_e_g_a_t_t_r_s
                    or the length of _v_i_d in either _o_l_d_s_e_g_a_t_t_r_s or
                    _n_e_w_s_e_g_a_t_t_r_s exceeds CCAA__MMAAXXVVIIDDLLEENN.

       EEPPEERRMM        Cannot update  the  checksum  for  a  segment
                    which already had a checksum.

       SSEENNOOSSHHOOSSTT    Host unknown.

       SSEENNOOSSSSEERRVV    Service unknown.

       SSEEEENNTTRRYYNNFFNNDD  vid,  side  or  fseq  in _o_l_d_s_e_g_a_t_t_r_s does not
                    match the current values in the database.

       SSEECCOOMMEERRRR     Communication error.

       EENNSSNNAACCTT      Name server is not running or is being  shut­
                    down.

SSEEEE AALLSSOO
       CCaassttoorr__lliimmiittss((44)), CCnnss__ggeettsseeggaattttrrss((33)),

AAUUTTHHOORR
       CCAASSTTOORR Team <castor.support@cern.ch>



CASTOR                 2004/03/03 09:17:4C3NS_UPDATESEG_CHECKSUM(3)
