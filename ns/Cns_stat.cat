CNS_STAT(3)           Cns Library Functions           CNS_STAT(3)



NNAAMMEE
       Cns_stat  -  get information about a CASTOR file or direc­
       tory in the name server

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee ""CCnnss__aappii..hh""

       iinntt CCnnss__ssttaatt ((ccoonnsstt cchhaarr **_p_a_t_h,, ssttrruucctt CCnnss__ffiilleessttaatt **_s_t_a_t_­
       _b_u_f))

       iinntt   CCnnss__ssttaattxx   ((ccoonnsstt  cchhaarr  **_p_a_t_h,,  ssttrruucctt  CCnnss__ffiilleeiidd
       **_f_i_l_e___u_n_i_q_u_e_i_d,, ssttrruucctt CCnnss__ffiilleessttaatt **_s_t_a_t_b_u_f))

DDEESSCCRRIIPPTTIIOONN
       CCnnss__ssttaatt gets information about a CASTOR file or directory
       in the name server.

       CCnnss__ssttaattxx  returns  the  same  information  plus  the file
       unique id (name server hostname and file  id).   The  file
       can  be  specified  by  _p_a_t_h name or by _f_i_l_e___u_n_i_q_u_e_i_d.  If
       both are given, _f_i_l_e___u_n_i_q_u_e_i_d is used.

       _p_a_t_h   specifies the logical pathname relative to the cur­
              rent  CASTOR directory or the full CASTOR pathname.

       The structure pointed to by _s_t_a_t_b_u_f contains the following
       members:
              u_signed64     fileid;        /* entry unique iden­
              tifier */
              mode_t         filemode; /* see below */
              int       nlink;         /* number of  files  in  a
              directory */
              uid_t          uid;
              gid_t          gid;
              u_signed64     filesize;
              time_t         atime;         /*   last  access  to
              file */
              time_t         mtime;         /* last file  modifi­
              cation */
              time_t         ctime;         /* last metadata mod­
              ification */
              short          fileclass;          /* 1-->  experi­
              ment, 2 --> user */
              char      status;        /* '-' --> online, 'm' -->
              migrated */

       filemode is constructed by  OR'ing  the  bits  defined  in
       <ssyyss//ssttaatt..hh> under Unix or  ""ssttaattbbiittss..hh"" under Windows/NT:

              SS__IIFFRREEGG   00xx88000000          regular file
              SS__IIFFDDIIRR   00xx44000000          directory
              SS__IISSUUIIDD   00000044000000         set user ID on execution
              SS__IISSGGIIDD   00000022000000         set group ID on execution
              SS__IISSVVTTXX   00000011000000         sticky bit
              SS__IIRRUUSSRR   00000000440000         read by owner
              SS__IIWWUUSSRR   00000000220000         write by owner
              SS__IIXXUUSSRR   00000000110000         execute/search by owner
              SS__IIRRGGRRPP   00000000004400         read by group
              SS__IIWWGGRRPP   00000000002200         write by group
              SS__IIXXGGRRPP   00000000001100         execute/search by group
              SS__IIRROOTTHH   00000000000044         read by others
              SS__IIWWOOTTHH   00000000000022         write by others
              SS__IIXXOOTTHH   00000000000011         execute/search by others

RREETTUURRNN VVAALLUUEE
       This  routine returns 0 if the operation was successful or
       -1 if the operation failed. In the latter case, sseerrrrnnoo  is
       set appropriately.

EERRRROORRSS
       EENNOOEENNTT       The named file/directory does not exist or is
                    a null pathname.

       EEAACCCCEESS       Search permission is denied on a component of
                    the _p_a_t_h prefix.

       EEFFAAUULLTT       _p_a_t_h or _s_t_a_t_b_u_f is a NULL pointer.

       EENNOOTTDDIIRR      A  component  of  _p_a_t_h prefix is not a direc­
                    tory.

       EENNAAMMEETTOOOOLLOONNGG The length of _p_a_t_h exceeds  CCAA__MMAAXXPPAATTHHLLEENN  or
                    the   length  of  a  _p_a_t_h  component  exceeds
                    CCAA__MMAAXXNNAAMMEELLEENN.

       SSEENNOOSSHHOOSSTT    Host unknown.

       SSEENNOOSSSSEERRVV    Service unknown.

       SSEECCOOMMEERRRR     Communication error.

       EENNSSNNAACCTT      Name server is not running or is being  shut­
                    down.

SSEEEE AALLSSOO
       CCaassttoorr__lliimmiittss((44)),        CCnnss__cchhddiirr((33)),       CCnnss__cchhmmoodd((33)),
       CCnnss__cchhoowwnn((33)), CCnnss__ccrreeaatt((33))

AAUUTTHHOORR
       CCAASSTTOORR Team <castor.support@cern.ch>



CASTOR                 2001/09/26 09:13:52            CNS_STAT(3)
